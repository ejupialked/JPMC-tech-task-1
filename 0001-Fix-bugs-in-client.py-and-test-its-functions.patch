From 8fefbc7a7f1035b57b398ff1ea3cc7decc809622 Mon Sep 17 00:00:00 2001
From: Alked Ejupi <ejupialkedcs@gmail.com>
Date: Thu, 30 Jul 2020 23:35:15 +0200
Subject: [PATCH] Fix bugs in client.py and test its functions

---
 client.py      | 12 +++++++++---
 client_test.py | 17 ++++++++++++++---
 2 files changed, 23 insertions(+), 6 deletions(-)

diff --git a/client.py b/client.py
index 40badcd..be7ac18 100644
--- a/client.py
+++ b/client.py
@@ -35,14 +35,18 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price+ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+
+	if (price_b == 0):
+		return
+
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +56,10 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib2.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
 			print "Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price)
 
-		print "Ratio %s" % getRatio(price, price)
+		print "Ratio %s" % getRatio(prices['ABC'], prices['DEF'])
diff --git a/client_test.py b/client_test.py
index a608a01..2eb327a 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client import getDataPoint
+from client import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,11 +17,20 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))  
 
+    """ ------------ When the second price is zero the function should return nothing ------------ """
+  def test_getRatio_divisionByZero(self):
+    self.assertIsNone(getRatio(334.0,0))
 
-  """ ------------ Add more unit tests ------------ """
-
+    """ ------------ Checking if the function the same formula ------------ """
+  def test_getRatio_calculateRation(self):
+  
+    price_a = 192.0 
+    price_b = 94.4
 
+    self.assertEqual(getRatio(price_a,price_b), price_a/price_b)
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.24.3 (Apple Git-128)

